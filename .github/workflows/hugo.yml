# Multi-version Hugo site deployment to GitHub Pages
name: Deploy Multi-Version Hugo site to Pages

on:
  # Runs on pushes to any version branch
  push:
    branches:
      - main      # Latest/current version
      - v1.0      # Version 1.0
      - v2.0      # Version 2.0
      # Add more version branches as needed

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# Sets permissions of the GITHUB_TOKEN to allow deployment to GitHub Pages
permissions:
  contents: read
  pages: write
  id-token: write

# Allow only one concurrent deployment, skipping runs queued between the run in-progress and latest queued.
# However, do NOT cancel in-progress runs as we want to allow these production deployments to complete.
concurrency:
  group: "pages"
  cancel-in-progress: false

# Default to bash
defaults:
  run:
    shell: bash

jobs:
  # Build job - builds ALL versions to ensure consistency
  build:
    runs-on: ubuntu-latest
    env:
      HUGO_VERSION: 0.146.0
    steps:
      - name: Install Hugo CLI
        run: |
          wget -O ${{ runner.temp }}/hugo.deb https://github.com/gohugoio/hugo/releases/download/v${HUGO_VERSION}/hugo_extended_${HUGO_VERSION}_linux-amd64.deb \
          && sudo dpkg -i ${{ runner.temp }}/hugo.deb          
      - name: Install Dart Sass
        run: sudo snap install dart-sass
      - name: Setup Pages
        id: pages
        uses: actions/configure-pages@v4
      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: '20'
      
      # Create deployment directory
      - name: Create deployment directory
        run: mkdir -p deployment
      
      # Build main version
      - name: Build main version
        run: |
          echo "Building main version..."
          git clone --depth 1 --branch main ${{ github.server_url }}/${{ github.repository }} main-build
          cd main-build
          npm ci
          hugo mod tidy
          hugo --gc --minify --baseURL "${{ steps.pages.outputs.base_url }}/"
          cp -r public/* ../deployment/
          cd ..
          rm -rf main-build
          echo "Main version built and copied to root"
      
      # Build v1.0 version
      - name: Build v1.0 version
        run: |
          echo "Building v1.0 version..."
          git clone --depth 1 --branch v1.0 ${{ github.server_url }}/${{ github.repository }} v1.0-build
          cd v1.0-build
          npm ci
          hugo mod tidy
          hugo --gc --minify --baseURL "${{ steps.pages.outputs.base_url }}/v1.0/"
          mkdir -p ../deployment/v1.0
          cp -r public/* ../deployment/v1.0/
          cd ..
          rm -rf v1.0-build
          echo "v1.0 version built and copied to /v1.0/"
      
      # Build v2.0 version (if branch exists)
      - name: Build v2.0 version
        continue-on-error: true
        run: |
          echo "Building v2.0 version..."
          git clone --depth 1 --branch v2.0 ${{ github.server_url }}/${{ github.repository }} v2.0-build
          cd v2.0-build
          npm ci
          hugo mod tidy
          hugo --gc --minify --baseURL "${{ steps.pages.outputs.base_url }}/v2.0/"
          mkdir -p ../deployment/v2.0
          cp -r public/* ../deployment/v2.0/
          cd ..
          rm -rf v2.0-build
          echo "v2.0 version built and copied to /v2.0/"
      
      # Show final structure
      - name: Show deployment structure
        run: |
          echo "Final deployment structure:"
          find deployment -name "*.html" | head -20
          echo ""
          echo "Directory structure:"
          ls -la deployment/
          if [ -d "deployment/v1.0" ]; then
            echo "v1.0 contents:"
            ls -la deployment/v1.0/ | head -10
          fi
      
      - name: Upload artifact
        uses: actions/upload-pages-artifact@v3
        with:
          path: ./deployment

  # Deployment job
  deploy:
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4 